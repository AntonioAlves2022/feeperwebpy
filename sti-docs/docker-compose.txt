version: '3.8'

services:
  # Serviço do Banco de Dados MySQL
  db:
    image: mysql:8.0
    container_name: ipt_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: intelligent_programming_tutor
      MYSQL_USER: django_user
      MYSQL_PASSWORD: django_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Serviço da Aplicação Django
  web:
    build: .
    container_name: ipt_django
    command: >
      bash -c "python manage.py migrate &&
               python manage.py collectstatic --noinput &&
               gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DEBUG=0
      - DJANGO_SETTINGS_MODULE=core.settings
      - DATABASE_URL=mysql://django_user:django_password@db/intelligent_programming_tutor
      - SECRET_KEY=sua_chave_secreta_django

  # Serviço do Redis para cache e tarefas assíncronas
  redis:
    image: redis:alpine
    container_name: ipt_redis

  # Serviço de Celery para tarefas assíncronas
  celery:
    build: .
    container_name: ipt_celery
    command: celery -A core worker -l info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=0
      - DATABASE_URL=mysql://django_user:django_password@db/intelligent_programming_tutor

  # Serviço de Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    container_name: ipt_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/static
    ports:
      - "80:80"
    depends_on:
      - web

volumes:
  mysql_data:
  static_volume:
